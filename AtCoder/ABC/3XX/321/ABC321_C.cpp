// 2024/03/07 09:55:22
// 2024/03/07 11:37:33 WA
// 2024/03/07 11:42:57 AC.
#include <iostream>
#include <vector>
using namespace std;
void printArr(int *arr, int len){
    for (int i = len; 1 <= i; i--) {
        cout << arr[i];
    }
    cout << endl;
}
int main(){
    // int arr[10][10] = {0};
    // arr[1][9] = {1};
    // for (int i = 2; i <= 9; i++) {
    //     int s = 0;
    //     for (int j = 8; 1 <= j; j--) {
    //         s += arr[i - 1][j + 1];
    //         arr[i][j] = s;
    //     }
    // }

    // int all = 0;
    // for (int i = 1; i <= 9; i++) {
    //     for (int j = 1; j <= 9; j++) {
    //         all += arr[i][j] * j;
    //         cout << arr[i][j] << ' ';
    //     }
    //     cout << endl;
    // }
    // cout << all << endl; // 511

    // int num[10] = {0}; // num[i]はi桁の321-like Numberの個数
    // for (int i = 1; i <= 9; i++) {
    //     for (int j = 1; j <= 9; j++) {
    //         num[i] += arr[i][j] * j;
    //     }
    // }
    // for (int i = 1; i <= 9; i++) {
    //     cout << num[i] << ' ';
    // }
    // cout << endl;
    int K;
    cin >> K;

    int cnt = 0; // cnt番目
    for (int len = 1; len <= 10; len++) { // 桁数
        int num[11]; // cnt番目の321-like Numberのi桁目
        /* num の初期化*/
        for (int i = 1; i <= len; i++) {
            num[i] = i - 1;
        }
        if (len == 1) {
            num[1] = 1;
        }
        // /* debug */
        // for (int j = 1; j <= len; j++) {
        //     cout << num[j] << ' ';
        // }
        // cout << endl;
        cnt++;
        if (cnt == K) {
            printArr(num, len);
            return 0;
        }
        bool end = false;
        while (!end) {
            for (int i = 1; i <= len; i++) {
                if (num[i] == 9) {
                    end = true;
                    break;
                }
                if (i == len || num[i] < num[i + 1] - 1) {
                    num[i]++;
                    for (int j = i - 1; 1 <= j; j--) {
                        num[j] = j - 1;
                    }
                    // /* debug */
                    // for (int j = 1; j <= len; j++) {
                    //     cout << num[j] << ' ';
                    // }
                    // cout << endl;
                    cnt++;
                    if (cnt == K) {
                        printArr(num, len);
                        return 0;
                    }
                    break;
                }
            }
        }
    }

    cout << cnt << endl;

    return 0;
}
/*
1,2,3,4,5,6,7,8,9 -> 9

21,31,41,51,61,71,81,91 -> 8
32,42,52,62,72,82,92 -> 7
43,53,63,73,83,93 -> 6
...
98 -> 1

321,421,521,621... -> 7
431,531,631...
...
981 -> 1
432,532,632,732,832,932 -> 6
542,642,... -> 5
...
982 -> 1
543 -> 5
...
983 -> 1

87654321,97654321,98754321,987654321,...,98765432 -> 9

987654321 -> 1


つまり？
9
8+7+6+5+4+3+2+1
7+6+5+4+3+2+1 + 6+5+4+3+2+1 + 5+4+3+2+1 + 4+3+2+1+ 3+2+1 + 2+1 + 1
6+5+4+3+2+1 + 5+4+3+2+1 + 4+3+2+1 + 3+2+1 + 2+1 + 1 + 5+4+3+2+1 + 4+3+2+1 + 3+2+1 + ...

つまり？
1桁: 100000000 -> 9*1通り

2桁: 011111111 -> 8*1 + 7*1 + 6*1 + ... + 1*1 通り (36)

3桁: 001234567 -> 7*1 + 6*2 + 5*3 + ... + 1*7 通り (84)

4桁: 6*1 + 5*3 + 4*6 + 3*10 + 2*15 + 1*21
000111111
000022222
000003333
000000444
000000055
000000006

洗濯に12分
全探索は無理な量？計算できん…(2024/03/07 10:35)

上記に基づいて計算させてみると…
```cpp
    int arr[10][10] = {0};
    arr[1][9] = {1};
    for (int i = 2; i <= 9; i++) {
        int s = 0;
        for (int j = 8; 1 <= j; j--) {
            s += arr[i - 1][j + 1];
            arr[i][j] = s;
        }
    }
    int all = 0;
    for (int i = 1; i <= 9; i++) {
        for (int j = 1; j <= 9; j++) {
            all += arr[i][j] * j;
            cout << arr[i][j] << ' ';
        }
        cout << endl;
    }
    cout << all << endl; // 511
```
たかだか511個しか無い・・・？(2024/03/07 10:57:22)
ということは小さい方から全探索で行けるんだろうけれど、
ここまでの理解が合っているかわからないし、一応上の解法を実装してみるか…

入力例3が777->983210なので間違っていますね()
でもまあこの例からしても1000個程度しかなさそうなのでやはり全探索が正解か。

あ～～～～ 0があるのかあああ (圧倒的今更感) (2024/03/07 11:29:26)

書き出してみたところ1022個だった。 1024 - 2って感じがするね。知らんけど。

0が入るってことは10桁の9876543210まであるのか。1WA出してしまったよ。(2024/03/07 11:42:09)

1,2,3,4,5,6,7,8,9
21,31,32,41,42,43,51,52,53,54,...,98

*/
